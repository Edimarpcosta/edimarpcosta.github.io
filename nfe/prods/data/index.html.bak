<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dados da NFe</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
            color: #333;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1, h2, h3 {
            color: #2c3e50;
        }
        h1 {
            text-align: center;
            margin-bottom: 30px;
        }
        #nfeData, #produtos, #emitente, #destinatario, #impostos, #transporte {
            margin-bottom: 30px;
        }
        table {
            border-collapse: collapse;
            width: 100%;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }
        th {
            background-color: #3498db;
            color: white;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        .input-group {
            display: flex;
            margin-bottom: 20px;
        }
        #chaveInput {
            flex-grow: 1;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 4px 0 0 4px;
        }
        button {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #2ecc71;
            color: white;
            border: none;
            border-radius: 0 4px 4px 0;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #27ae60;
        }
        .info-group {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }
        .info-item {
            flex: 1;
            min-width: 200px;
        }
        .loading {
            text-align: center;
            display: none;
        }
        #notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 10px 20px;
            border-radius: 4px;
            color: white;
            display: none;
        }
        .success {
            background-color: #2ecc71;
        }
        .error {
            background-color: #e74c3c;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Dados da NFe</h1>
        <div class="input-group">
            <input type="text" id="chaveInput" placeholder="Digite a chave da NFe">
            <button onclick="fetchNFeData()">Buscar Dados</button>
        </div>
        <button id="sendTelegramBtn" onclick="sendTelegramMessage()" style="display: none;">Enviar para o Telegram</button>
        <div class="loading" id="loading">Carregando...</div>
        <div id="nfeData"></div>
        <h2>Emitente</h2>
        <div id="emitente"></div>
        <h2>Destinatário</h2>
        <div id="destinatario"></div>
        <h2>Impostos</h2>
        <div id="impostos"></div>
        <h2>Produtos</h2>
        <div id="produtos"></div>
        <h2>Transporte</h2>
        <div id="transporte"></div>
    </div>
    <div id="notification"></div>

    <script>
        const TELEGRAM_TOKEN = 'seu_token_telegram';
        const TELEGRAM_CHAT_ID = 'seu_chat_id';
        let nfeDataGlobal, xmlDataGlobal;

        async function fetchNFeData() {
            const chave = document.getElementById('chaveInput').value;
            if (!chave) {
                showNotification('Por favor, digite a chave da NFe.', 'error');
                return;
            }

            showLoading(true);

            try {
                const nfeData = await fetchData(`https://ws.meudanfe.com/api/v1/get/nfe/data/MEUDANFE/${chave}`);
                const xmlData = await fetchData(`https://ws.meudanfe.com/api/v1/get/nfe/xml/${chave}`);

                nfeDataGlobal = nfeData;
                xmlDataGlobal = xmlData;

                displayNFeData(nfeData);
                displayEmitente(xmlData);
                displayDestinatario(xmlData);
                displayImpostos(xmlData);
                displayProdutos(xmlData);
                displayTransporte(xmlData);

                document.getElementById('sendTelegramBtn').style.display = 'block';
                showNotification('Dados obtidos com sucesso!', 'success');
            } catch (error) {
                console.error('Erro ao buscar dados:', error);
                showNotification('Ocorreu um erro ao buscar os dados da NFe.', 'error');
            } finally {
                showLoading(false);
            }
        }

        async function fetchData(url) {
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'text/plain;charset=UTF-8',
                    'Accept': '*/*',
                    'Accept-Language': 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7',
                    'Accept-Encoding': 'gzip, deflate, br, zstd',
                    'Origin': 'https://meudanfe.com.br',
                    'Referer': 'https://meudanfe.com.br/',
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36',
                    'sec-ch-ua': '"Not)A;Brand";v="99", "Google Chrome";v="127", "Chromium";v="127"',
                    'sec-ch-ua-platform': '"Windows"',
                    'sec-ch-ua-mobile': '?0',
                    'sec-fetch-site': 'cross-site',
                    'sec-fetch-mode': 'cors',
                    'sec-fetch-dest': 'empty',
                    'Priority': 'u=1, i'
                },
                body: document.getElementById('chaveInput').value
            });
            if (!response.ok) {
                throw new Error('Falha na requisição');
            }
            return url.includes('/xml/') ? response.text() : response.json();
        }

        function getElementText(element, tagName) {
            const tag = element.getElementsByTagName(tagName)[0];
            return tag ? tag.textContent : 'N/A';
        }

        function displayNFeData(data) {
            const nfeDataDiv = document.getElementById('nfeData');
            nfeDataDiv.innerHTML = `
                <h2>Informações Gerais</h2>
                <div class="info-group">
                    <div class="info-item">
                        <p><strong>Chave de Acesso:</strong> ${data.chaveAcesso}</p>
                        <p><strong>Número:</strong> ${data.numero}</p>
                        <p><strong>Data de Emissão:</strong> ${data.dataEmissao}</p>
                        <p><strong>Valor Total:</strong> R$ ${data.valorTotal}</p>
                    </div>
                </div>
            `;
        }

        function displayEmitente(xmlData) {
            const parser = new DOMParser();
            const xmlDoc = parser.parseFromString(xmlData, "text/xml");
            const emitente = xmlDoc.getElementsByTagName("emit")[0];
            
            const emitenteDiv = document.getElementById('emitente');
            emitenteDiv.innerHTML = `
                <div class="info-group">
                    <div class="info-item">
                        <p><strong>Nome:</strong> ${getElementText(emitente, "xNome")}</p>
                        <p><strong>Nome Fantasia:</strong> ${getElementText(emitente, "xFant")}</p>
                        <p><strong>CNPJ:</strong> ${getElementText(emitente, "CNPJ")}</p>
                        <p><strong>Inscrição Estadual:</strong> ${getElementText(emitente, "IE")}</p>
                        <p><strong>Inscrição Municipal:</strong> ${getElementText(emitente, "IM")}</p>
                        <p><strong>Telefone:</strong> ${getElementText(emitente, "fone")}</p>
                    </div>
                    <div class="info-item">
                        <h3>Endereço</h3>
                        <p><strong>Logradouro:</strong> ${getElementText(emitente, "xLgr")}</p>
                        <p><strong>Número:</strong> ${getElementText(emitente, "nro")}</p>
                        <p><strong>Bairro:</strong> ${getElementText(emitente, "xBairro")}</p>
                        <p><strong>Município:</strong> ${getElementText(emitente, "xMun")}</p>
                        <p><strong>CEP:</strong> ${getElementText(emitente, "CEP")}</p>
                        <p><strong>UF:</strong> ${getElementText(emitente, "UF")}</p>
                    </div>
                </div>
            `;
        }

        function displayDestinatario(xmlData) {
            const parser = new DOMParser();
            const xmlDoc = parser.parseFromString(xmlData, "text/xml");
            const destinatario = xmlDoc.getElementsByTagName("dest")[0];
            
            const destinatarioDiv = document.getElementById('destinatario');
            destinatarioDiv.innerHTML = `
                <div class="info-group">
                    <div class="info-item">
                        <p><strong>Nome:</strong> ${getElementText(destinatario, "xNome")}</p>
                        <p><strong>CNPJ:</strong> ${getElementText(destinatario, "CNPJ")}</p>
                        <p><strong>Inscrição Estadual:</strong> ${getElementText(destinatario, "IE")}</p>
                        <p><strong>Email:</strong> ${getElementText(destinatario, "email")}</p>
                        <p><strong>Telefone:</strong> ${getElementText(destinatario, "fone")}</p>
                    </div>
                    <div class="info-item">
                        <h3>Endereço</h3>
                        <p><strong>Logradouro:</strong> ${getElementText(destinatario, "xLgr")}</p>
                        <p><strong>Número:</strong> ${getElementText(destinatario, "nro")}</p>
                        <p><strong>Bairro:</strong> ${getElementText(destinatario, "xBairro")}</p>
                        <p><strong>Município:</strong> ${getElementText(destinatario, "xMun")}</p>
                        <p><strong>CEP:</strong> ${getElementText(destinatario, "CEP")}</p>
                        <p><strong>UF:</strong> ${getElementText(destinatario, "UF")}</p>
                    </div>
                </div>
            `;
        }

        function displayImpostos(xmlData) {
            const parser = new DOMParser();
            const xmlDoc = parser.parseFromString(xmlData, "text/xml");
            const impostos = xmlDoc.getElementsByTagName("ICMSTot")[0];
            
            const impostosDiv = document.getElementById('impostos');
            impostosDiv.innerHTML = `
                <div class="info-group">
                    <div class="info-item">
                        <p><strong>Base de Cálculo do ICMS:</strong> R$ ${getElementText(impostos, "vBC")}</p>
                        <p><strong>Valor do ICMS:</strong> R$ ${getElementText(impostos, "vICMS")}</p>
                        <p><strong>Base de Cálculo do ICMS ST:</strong> R$ ${getElementText(impostos, "vBCST")}</p>
                        <p><strong>Valor do ICMS ST:</strong> R$ ${getElementText(impostos, "vST")}</p>
                        <p><strong>Valor dos Produtos:</strong> R$ ${getElementText(impostos, "vProd")}</p>
                        <p><strong>Valor do Frete:</strong> R$ ${getElementText(impostos, "vFrete")}</p>
                    </div>
                    <div class="info-item">
                        <p><strong>Valor do Seguro:</strong> R$ ${getElementText(impostos, "vSeg")}</p>
                        <p><strong>Valor do Desconto:</strong> R$ ${getElementText(impostos, "vDesc")}</p>
                        <p><strong>Valor do IPI:</strong> R$ ${getElementText(impostos, "vIPI")}</p>
                        <p><strong>Valor do PIS:</strong> R$ ${getElementText(impostos, "vPIS")}</p>
                        <p><strong>Valor da COFINS:</strong> R$ ${getElementText(impostos, "vCOFINS")}</p>
                        <p><strong>Valor Total da Nota:</strong> R$ ${getElementText(impostos, "vNF")}</p>
                    </div>
                </div>
            `;
        }

        function displayProdutos(xmlData) {
            const parser = new DOMParser();
            const xmlDoc = parser.parseFromString(xmlData, "text/xml");
            const produtos = xmlDoc.getElementsByTagName("det");

            let tableHtml = `
                <table>
                    <tr>
                        <th>Código</th>
                        <th>Descrição</th>
                        <th>Quantidade</th>
                        <th>Unidade</th>
                        <th>Valor Unitário</th>
                        <th>Valor Total</th>
                        <th>NCM</th>
                        <th>CFOP</th>
                        <th>CST</th>
                    </tr>
            `;

            for (let i = 0; i < produtos.length; i++) {
                const prod = produtos[i].getElementsByTagName("prod")[0];
                const cProd = getElementText(prod, "cProd");
                const xProd = getElementText(prod, "xProd");
                const qCom = getElementText(prod, "qCom");
                const uCom = getElementText(prod, "uCom");
                const vUnCom = getElementText(prod, "vUnCom");
                const vProd = getElementText(prod, "vProd");
                const NCM = getElementText(prod, "NCM");
                const CFOP = getElementText(prod, "CFOP");
                const CST = getElementText(prod, "CST");

                tableHtml += `
                    <tr>
                        <td>${cProd}</td>
                        <td>${xProd}</td>
                        <td>${qCom}</td>
                        <td>${uCom}</td>
                        <td>R$ ${vUnCom}</td>
                        <td>R$ ${vProd}</td>
                        <td>${NCM}</td>
                        <td>${CFOP}</td>
                        <td>${CST}</td>
                    </tr>
                `;
            }

            tableHtml += '</table>';
            document.getElementById('produtos').innerHTML = tableHtml;
        }

        function displayTransporte(xmlData) {
            const parser = new DOMParser();
            const xmlDoc = parser.parseFromString(xmlData, "text/xml");
            const transporte = xmlDoc.getElementsByTagName("transp")[0];
            
            const transporteDiv = document.getElementById('transporte');
            transporteDiv.innerHTML = `
                <div class="info-group">
                    <div class="info-item">
                        <p><strong>Modalidade do Frete:</strong> ${getElementText(transporte, "modFrete")}</p>
                    </div>
                    <div class="info-item">
                        <h3>Transportadora</h3>
                        <p><strong>Nome:</strong> ${getElementText(transporte, "xNome")}</p>
                        <p><strong>CNPJ:</strong> ${getElementText(transporte, "CNPJ")}</p>
                        <p><strong>Inscrição Estadual:</strong> ${getElementText(transporte, "IE")}</p>
                        <p><strong>Endereço:</strong> ${getElementText(transporte, "xEnder")}</p>
                        <p><strong>Município:</strong> ${getElementText(transporte, "xMun")}</p>
                        <p><strong>UF:</strong> ${getElementText(transporte, "UF")}</p>
                    </div>
                </div>
            `;
        }

        async function sendTelegramMessage() {
            if (!nfeDataGlobal || !xmlDataGlobal) {
                showNotification('Dados da NFe não disponíveis. Por favor, busque os dados primeiro.', 'error');
                return;
            }

            const parser = new DOMParser();
            const xmlDoc = parser.parseFromString(xmlDataGlobal, "text/xml");
            const produtos = xmlDoc.getElementsByTagName("det");
            let produtosText = '';
            for (let i = 0; i < produtos.length; i++) {
                const prod = produtos[i].getElementsByTagName("prod")[0];
                const cProd = getElementText(prod, "cProd");
                const xProd = getElementText(prod, "xProd");
                const qCom = getElementText(prod, "qCom");
                produtosText += `${cProd} - ${xProd} - ${qCom}\n`;
            }

            const message = `
Nome/Razão Social Emitente: ${nfeDataGlobal.emiNome}
Data Ent./Saida: ${nfeDataGlobal.dataEntSaida}
PRODUTOS:
CODIGO  //  NOME  //  QUANTIDADE

${produtosText}`;

            const payload = {
                chat_id: TELEGRAM_CHAT_ID,
                text: message
            };

            const options = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload)
            };

            try {
                const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, options);
                if (!response.ok) {
                    throw new Error('Erro ao enviar mensagem para o Telegram.');
                }
                showNotification('Mensagem enviada para o Telegram com sucesso!', 'success');
            } catch (error) {
                console.error("Error sending message to Telegram: ", error);
                showNotification('Ocorreu um erro ao enviar a mensagem para o Telegram.', 'error');
            }
        }

        function showLoading(show) {
            document.getElementById('loading').style.display = show ? 'block' : 'none';
        }

        function showNotification(message, type) {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.className = type;
            notification.style.display = 'block';
            setTimeout(() => {
                notification.style.display = 'none';
            }, 5000);
        }

        document.getElementById('chaveInput').addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                fetchNFeData();
            }
        });
    </script>
</body>
</html>
